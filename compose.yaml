services:
  db:
    image: postgres
    container_name: myDatabaseContainer
    # 로컬 시 활성화
    env_file:
      - .env
    # 배포 시 활성화(+Render Dashboard에서 주입)
#    environment:
#      - POSTGRES_DB
#      - POSTGRES_USER
#      - POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    # 회원목록, 주문목록 등 저장 시
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data

  app:
    build: .
    container_name: myAppContainer
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    # 로컬 시 활성화
    env_file:
      - .env
    # 배포 시 활성화(+Render Dashboard에서 주입)
#    environment:
#      - SPRING_DATASOURCE_URL
#      - SPRING_DATASOURCE_USERNAME
#      - SPRING_DATASOURCE_PASSWORD
#      - OPENAI_API_KEY
    # 개발 중 코드 실시간 반영
#    volumes:
#      - ./src:/app/src
#      - ./build.gradle:/app/build.gradle
#      - ./settings.gradle:/app/settings.gradle
#      - ./gradle:/app/gradle
#    command: java -jar build/libs/*.jar